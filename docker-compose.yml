version: "3"

services:
  # frontendの設定
  frontend:
    container_name: learning-vue
    build:
      context: .
      dockerfile: ./docker/frontend.Dockerfile
    environment:
      # Reactのホットリロードを有効化するための設定
      - WATCHPACK_POLLING=true
    volumes:
      # ルートディレクトリ配下をworkspace配下にマウントする
      - .:/workspace:cached
      # frontendディレクトリをworkspace/frontendにマウントする
      - ./frontend:/workspace/frontend
      # node_modulesは別ボリュームでマウントする
      - frontend_node_modules:/workspace/frontend/node_modules
    ports:
      - "4444:4444"
    depends_on:
      - backend
    networks:
      - app-network
  # backendの設定
  backend:
    container_name: learning-node
    build:
      context: .
      dockerfile: ./docker/backend.Dockerfile
    tty: true
    environment:
      # nodemonでホットリロードを有効化するための設定
      - CHOKIDAR_USEPOLLING=true
    volumes:
      # ルートディレクトリ配下をworkspace配下にマウントする
      - .:/workspace:cached
      # backendディレクトリをworkspace/backendにマウントする
      - ./backend:/workspace/backend
      # node_modulesは別ボリュームでマウントする
      - backend_node_modules:/workspace/backend/node_modules
    ports:
      - "5555:5555"
      - "7777:7777"
    depends_on:
      - db
    networks:
      - app-network
  # dbの設定
  db:
    image: postgres:13
    restart: always
    container_name: learning-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - db-store:/var/lib/postgresql/data/
    # ボリュームの設定、実行時に作ってくれる
    networks:
      - app-network
volumes:
  frontend_node_modules:
  backend_node_modules:
  db-store:

networks:
  app-network:
